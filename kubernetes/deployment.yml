apiVersion: apps/v1
kind: Deployment
metadata:
  name: search
  namespace: backend
  labels:
    app: search
    tier: backend
spec:
  replicas: 1
  template:
    metadata:
      name: search
      labels:
        app: search
        tier: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8090"
        prometheus.io/path: "/search/actuator/prometheus"
    spec:
      serviceAccountName: search-account
      containers:
      - name: search
        image: $(CONTAINER_REGISTRY)/search:$(tagVersion)
        imagePullPolicy: Always
        volumeMounts:
        - name: app-configuration
          mountPath: "/etc/application"
          readOnly: true
        resources:
          requests:
            memory: 512Mi
            cpu: 200m
          limits:
            memory: 768Mi
            cpu: 400m
        ports:
        - containerPort: 8090
          name: http
        readinessProbe:
          httpGet:
            path: /search/actuator/health
            port: 8090
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 2
          failureThreshold: 1
          successThreshold: 1
      volumes:
      - name: app-configuration
        configMap:
          name: search
      restartPolicy: Always
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: agentpool
                operator: In
                values:
                - userpool
  selector:
    matchLabels:
      app: search
      tier: backend
